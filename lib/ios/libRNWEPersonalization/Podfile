# Uncomment the next line to define a global platform for your project
 platform :ios, '12.0'

require_relative '../../node_modules/react-native/scripts/react_native_pods'
require_relative '../../node_modules/@react-native-community/cli-platform-ios/native_modules'


flipper_config =  FlipperConfiguration.enabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'libRNWEPersonalization' do
  # Comment the next line if you don't want to use dynamic frameworks
#  use_frameworks!

  
  config = use_native_modules!

   # Flags change depending on the env values.
   flags = get_default_flags()

   use_react_native!(
     :path => config[:reactNativePath],
     # Hermes is now enabled by default. Disable by setting this flag to false.
     # Upcoming versions of React Native may rely on get_default_flags(), but
     # we make it explicit here to aid in the React Native upgrade process.
     :hermes_enabled => false,
     :fabric_enabled => false,
     # Enables Flipper.
     #
     # Note that if you have use_frameworks! enabled, Flipper will not work and
     # you should disable the next line.
     :flipper_configuration => flipper_config,
     # An absolute path to your application root.
     :app_path => "#{Pod::Config.instance.installation_root}/.."
   )
  # Pods for libRNWEPersonalization
  pod 'WebEngage'
  pod 'WEPersonalization'

end
#post_install do |installer|
#    flipper_post_install(installer)
#
#    find_and_replace("Pods/Headers/Private/RCT-Folly/folly/synchronization/DistributedMutex-inl.h",
#    "atomic_notify_one(state)", "folly::atomic_notify_one(state)")
#
#    find_and_replace("Pods/Flipper-Folly/folly/synchronization/DistributedMutex-inl.h",
#    "atomic_wait_until(&state, previous | data, deadline)", "folly::atomic_wait_until(&state, previous | data, deadline)")
#  end
