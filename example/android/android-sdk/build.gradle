plugins {
    id 'com.android.library'
    id 'maven-publish'
//    id 'maven'
}


// apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"

android {
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    compileSdkVersion 33

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        consumerProguardFiles 'consumer-proguard-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles 'proguard-android-default.pro', 'proguard-rules.pro'

            Properties properties = new Properties()
            properties.load(project.file('version.properties').newDataInputStream())

            int major = properties.getProperty("major").toInteger()
            int minor = properties.getProperty("minor").toInteger()
            int patch = properties.getProperty("patch").toInteger()
            int feature = (major * 10000) + (minor * 100) + patch
            buildConfigField "int", "MAJOR", properties.getProperty("major")
            buildConfigField "int", "MINOR", properties.getProperty("minor")
            buildConfigField "int", "PATCH", properties.getProperty("patch")
            buildConfigField "double", "FEATURE_VERSION", feature.toString()
            buildConfigField "String", "SDK_PLATFORM", "\"Android\""
            buildConfigField "int", "SDK_ID", "2"
        }

        debug {
            minifyEnabled true
            proguardFiles 'proguard-android-default.pro', 'proguard-rules.pro'
            Properties properties = new Properties()
            properties.load(project.file('version.properties').newDataInputStream())

            int major = properties.getProperty("major").toInteger()
            int minor = properties.getProperty("minor").toInteger()
            int patch = properties.getProperty("patch").toInteger()
            int feature = (major * 10000) + (minor * 100) + patch
            buildConfigField "int", "MAJOR", properties.getProperty("major")
            buildConfigField "int", "MINOR", properties.getProperty("minor")
            buildConfigField "int", "PATCH", properties.getProperty("patch")
            buildConfigField "double", "FEATURE_VERSION", feature.toString()
            buildConfigField "String", "SDK_PLATFORM","\"Android\""
            buildConfigField "int", "SDK_ID", "2"
        }

    }

    lintOptions {
        abortOnError true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    api 'net.sourceforge.htmlcleaner:htmlcleaner:2.26'

    compileOnly('androidx.appcompat:appcompat:1.3.1')
    compileOnly('com.google.android.gms:play-services-gcm:17.0.0') {
        exclude module: 'support-v4'
    }
    compileOnly('com.google.android.gms:play-services-location:18.0.0') {
        exclude module: 'support-v4'
    }
    compileOnly('com.google.android.gms:play-services-ads:20.5.0') {
        exclude module: 'support-v4'
    }
    compileOnly 'com.android.installreferrer:installreferrer:2.2'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.18.0'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.7'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.7'
}



